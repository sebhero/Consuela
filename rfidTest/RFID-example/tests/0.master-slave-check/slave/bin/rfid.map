Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
                              bin/lib/lcd.o (__divmodhi4)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o (exit)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
LOAD bin/main.o
LOAD bin/lib/lcd.o
LOAD bin/lib/spi.o
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x314
 *(.vectors)
 .vectors       0x00000000       0x34 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000034                . = ALIGN (0x2)
                0x00000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000034        0x0 linker stubs
 *(.trampolines*)
                0x00000034                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000034                __ctors_start = .
 *(.ctors)
                0x00000034                __ctors_end = .
                0x00000034                __dtors_start = .
 *(.dtors)
                0x00000034                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000034        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
                0x00000034                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000034        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000040        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
 *(.init9)
 *(.text)
 .text          0x00000044        0x2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
                0x00000044                __vector_22
                0x00000044                __vector_1
                0x00000044                __vector_24
                0x00000044                __vector_12
                0x00000044                __bad_interrupt
                0x00000044                __vector_6
                0x00000044                __vector_3
                0x00000044                __vector_23
                0x00000044                __vector_25
                0x00000044                __vector_11
                0x00000044                __vector_13
                0x00000044                __vector_17
                0x00000044                __vector_19
                0x00000044                __vector_7
                0x00000044                __vector_5
                0x00000044                __vector_4
                0x00000044                __vector_9
                0x00000044                __vector_2
                0x00000044                __vector_21
                0x00000044                __vector_15
                0x00000044                __vector_8
                0x00000044                __vector_14
                0x00000044                __vector_10
                0x00000044                __vector_16
                0x00000044                __vector_18
                0x00000044                __vector_20
 .text          0x00000046        0x0 bin/main.o
 .text          0x00000046      0x23c bin/lib/lcd.o
                0x00000046                LCDBusyLoop
                0x00000092                LCDByte
                0x000000e2                LCDInit
                0x00000148                LCDWriteString
                0x00000190                LCDWriteInt
                0x00000220                LCDGotoXY
                0x00000242                LCDHexDumpXY
 .text          0x00000282       0x14 bin/lib/spi.o
                0x00000282                spi_init
                0x0000028c                spi_transmit
 .text          0x00000296        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text          0x00000296        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text          0x00000296        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
                0x00000296                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000296       0x2c bin/main.o
                0x00000296                main
 .text.libgcc.mul
                0x000002c2        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x000002c2       0x26 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
                0x000002c2                __divmodhi4
                0x000002c2                _div
 .text.libgcc   0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000002e8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000002e8       0x28 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
                0x000002e8                __udivmodhi4
 .text.libgcc   0x00000310        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000310        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000310        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000310        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
                0x00000310                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000310        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                0x00000310                exit
                0x00000310                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000310        0x4 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000314                _etext = .

.data           0x00800100        0x0 load address 0x00000314
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
 .data          0x00800100        0x0 bin/main.o
 .data          0x00800100        0x0 bin/lib/lcd.o
 .data          0x00800100        0x0 bin/lib/spi.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x0
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
 .bss           0x00800100        0x0 bin/main.o
 .bss           0x00800100        0x0 bin/lib/lcd.o
 .bss           0x00800100        0x0 bin/lib/spi.o
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x00800100                PROVIDE (__bss_end, .)
                0x00000314                __data_load_start = LOADADDR (.data)
                0x00000314                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800100        0x0
                0x00800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800100                PROVIDE (__noinit_end, .)
                0x00800100                _end = .
                0x00800100                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 bin/main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 bin/lib/lcd.o
 .comment       0x00000000       0x12 bin/lib/spi.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 bin/main.o
 .debug_aranges
                0x00000020       0x20 bin/lib/lcd.o
 .debug_aranges
                0x00000040       0x20 bin/lib/spi.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0xb07
 *(.debug_info)
 .debug_info    0x00000000      0x1d9 bin/main.o
 .debug_info    0x000001d9      0x886 bin/lib/lcd.o
 .debug_info    0x00000a5f       0xa8 bin/lib/spi.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x48b
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x14e bin/main.o
 .debug_abbrev  0x0000014e      0x2c7 bin/lib/lcd.o
 .debug_abbrev  0x00000415       0x76 bin/lib/spi.o

.debug_line     0x00000000      0x3a5
 *(.debug_line)
 .debug_line    0x00000000       0xd9 bin/main.o
 .debug_line    0x000000d9      0x250 bin/lib/lcd.o
 .debug_line    0x00000329       0x7c bin/lib/spi.o

.debug_frame    0x00000000      0x124
 *(.debug_frame)
 .debug_frame   0x00000000       0x24 bin/main.o
 .debug_frame   0x00000024       0xcc bin/lib/lcd.o
 .debug_frame   0x000000f0       0x34 bin/lib/spi.o

.debug_str      0x00000000      0x1b0
 *(.debug_str)
 .debug_str     0x00000000      0x113 bin/main.o
                                0x14c (size before relaxing)
 .debug_str     0x00000113       0x8f bin/lib/lcd.o
                                0x1bc (size before relaxing)
 .debug_str     0x000001a2        0xe bin/lib/spi.o
                                 0xd9 (size before relaxing)

.debug_loc      0x00000000      0x580
 *(.debug_loc)
 .debug_loc     0x00000000       0x1e bin/main.o
 .debug_loc     0x0000001e      0x541 bin/lib/lcd.o
 .debug_loc     0x0000055f       0x21 bin/lib/spi.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(bin/rfid.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x40
 .debug_ranges  0x00000000       0x10 bin/main.o
 .debug_ranges  0x00000010       0x30 bin/lib/lcd.o
